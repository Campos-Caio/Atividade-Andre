name: Docker Build and Push

# Executa o workflow quando houver push na branch main ou quando criar tags
on:
  push:
    branches:
      - main
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
      - master

# VariÃ¡veis de ambiente
env:
  DOCKER_IMAGE_NAME: cadastro-clientes-nodejs

jobs:
  # Job para executar os testes antes do build
  test:
    runs-on: ubuntu-latest
    name: Executar Testes
    
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '14'

      - name: Instalar dependÃªncias
        run: npm install

      - name: Executar testes
        run: npm test

      - name: Executar testes com cobertura
        run: npm run test:coverage

  # Job para fazer o build e push da imagem Docker
  docker:
    runs-on: ubuntu-latest
    name: Build e Push Docker
    needs: test  # SÃ³ executa se os testes passarem
    
    steps:
      - name: Checkout do cÃ³digo
        uses: actions/checkout@v4

      - name: Configurar Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login no Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Extrair metadados para Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix={{branch}}-
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build e Push da imagem Docker
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE_NAME }}:buildcache,mode=max

      - name: Imagem Docker publicada com sucesso
        run: |
          echo "âœ… Imagem Docker publicada com sucesso!"
          echo "ðŸ“¦ Tags criadas:"
          echo "${{ steps.meta.outputs.tags }}"
